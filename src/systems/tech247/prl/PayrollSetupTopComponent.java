/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systems.tech247.prl;

import java.awt.BorderLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.awt.StatusDisplayer;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.BeanTreeView;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.RequestProcessor;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import systems.tech247.dbaccess.DataAccess;
import systems.tech247.hr.TblPeriods;
import systems.tech247.util.CapClosePeriod;
import systems.tech247.util.CetusUTL;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//systems.tech247.prl//PayrollSetup//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "PayrollSetupTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "explorer", openAtStartup = false /*, roles = {"Payroll"}*/)
@ActionID(category = "Window", id = "systems.tech247.prl.PayrollSetupTopComponent")
//@ActionReference(path = "Menu/Window" /*, position = 333 */)
//@TopComponent.OpenActionRegistration(
//        displayName = "#CTL_PayrollSetupAction",
//        preferredID = "PayrollSetupTopComponent"
//)
@Messages({
    "CTL_PayrollSetupAction=PayrollSetup",
    "CTL_PayrollSetupTopComponent=Payroll Setup",
    "HINT_PayrollSetupTopComponent=This is a PayrollSetup window"
})
public final class PayrollSetupTopComponent extends TopComponent implements ExplorerManager.Provider{
    
    ExplorerManager em = UtilityPLR.emPLRsetup;
    InstanceContent content = new InstanceContent();
    Lookup lookup = new AbstractLookup(content);
    final TblPeriods period = DataAccess.getCurrentMonth();
    public PayrollSetupTopComponent() {
        initComponents();
        setName(Bundle.CTL_PayrollSetupTopComponent());
        setToolTipText(Bundle.HINT_PayrollSetupTopComponent());
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        setLayout(new BorderLayout());
        BeanTreeView btv = new BeanTreeView();
        btv.setRootVisible(false);
        add(btv);
        
        //There should be a condition for this, check for the right
        if(CetusUTL.userRights.contains(335)){
            content.add(new CapClosePeriod() {
            @Override
            public void closePeriod() {
                UtilityPLR.getInstance().closePeriod(period);
            }
        });
        }
        
        
        
        associateLookup(lookup);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        StatusDisplayer.getDefault().setStatusText("Payroll Setup Opened!");
                
    }

    @Override
    public void componentClosed() {
        StatusDisplayer.getDefault().setStatusText("Payroll Setup Closed");
    }

    @Override
    protected void componentShowing() {
        super.componentShowing();
        RequestProcessor.getDefault().post(new Runnable() {
            @Override
            public void run() {
                UtilityPLR.loadPayrollSetup();
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        //To change body of generated methods, choose Tools | Templates.
    }
    
    

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }
}
