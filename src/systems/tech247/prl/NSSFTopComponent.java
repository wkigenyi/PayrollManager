/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systems.tech247.prl;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import systems.tech247.dbaccess.DataAccess;
import systems.tech247.hr.TblNSSF;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//systems.tech247.prl//NSSF//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "NSSFTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "systems.tech247.prl.NSSFTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_NSSFAction",
        preferredID = "NSSFTopComponent"
)
@Messages({
    "CTL_NSSFAction=NSSF",
    "CTL_NSSFTopComponent=NSSF Setup",
    "HINT_NSSFTopComponent=This is a NSSF window"
})
public final class NSSFTopComponent extends TopComponent {

    public NSSFTopComponent() {
        initComponents();
        setName(Bundle.CTL_NSSFTopComponent());
        setToolTipText(Bundle.HINT_NSSFTopComponent());
        TblNSSF nssf = DataAccess.getNSSF();
        try{
        jtCriteria.setText(nssf.getNSSFCriteriaPayrollCodeID().getPayrollCodeCode()+"");
        jtCriteriaPercentage.setText(nssf.getGrossPercentage()+"");
        jtEmployerfactor.setText(nssf.getEmployerFactor()+"");
        jtfMaximumContribution.setValue(nssf.getEmployeeMaximum());
        jtRounding.setText(nssf.getNSSFRounding()+"");
        jtVoluntaryCode.setText(nssf.getVoluntaryPayrollCodeID().getPayrollCodeCode()+"");
        jtBasicPercentage.setText(nssf.getBasicPercentage()+"");
        jtGrossPercentage.setText(nssf.getGrossPercentage()+"");
        }catch(Exception ex){
            //Some values not filled 
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtCriteria = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtCriteriaPercentage = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtEmployerfactor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtRounding = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtVoluntaryCode = new javax.swing.JTextField();
        jtfMaximumContribution = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jtBasicPercentage = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtGrossPercentage = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jLabel1.text")); // NOI18N

        jtCriteria.setText(org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jtCriteria.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jLabel2.text")); // NOI18N

        jtCriteriaPercentage.setText(org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jtCriteriaPercentage.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jLabel3.text")); // NOI18N

        jtEmployerfactor.setText(org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jtEmployerfactor.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jLabel4.text")); // NOI18N

        jtRounding.setText(org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jtRounding.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jLabel6.text")); // NOI18N

        jtVoluntaryCode.setText(org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jtVoluntaryCode.text")); // NOI18N

        jtfMaximumContribution.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        jtfMaximumContribution.setText(org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jtfMaximumContribution.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jLabel7.text")); // NOI18N

        jtBasicPercentage.setText(org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jtBasicPercentage.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jLabel8.text")); // NOI18N

        jtGrossPercentage.setText(org.openide.util.NbBundle.getMessage(NSSFTopComponent.class, "NSSFTopComponent.jtGrossPercentage.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtCriteria)
                    .addComponent(jtCriteriaPercentage, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jtEmployerfactor, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jtRounding, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jtVoluntaryCode, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jtfMaximumContribution)
                    .addComponent(jtBasicPercentage, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jtGrossPercentage, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtCriteriaPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtBasicPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtGrossPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtEmployerfactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfMaximumContribution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtRounding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtVoluntaryCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jtBasicPercentage;
    private javax.swing.JTextField jtCriteria;
    private javax.swing.JTextField jtCriteriaPercentage;
    private javax.swing.JTextField jtEmployerfactor;
    private javax.swing.JTextField jtGrossPercentage;
    private javax.swing.JTextField jtRounding;
    private javax.swing.JTextField jtVoluntaryCode;
    private javax.swing.JFormattedTextField jtfMaximumContribution;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
